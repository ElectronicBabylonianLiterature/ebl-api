name: CI

on:
  push:
  pull_request:
    branches: [master]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PIPENV_VENV_IN_PROJECT: 1
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PYMONGOIM__MONGO_VERSION: 7.0
  PYMONGOIM__OPERATING_SYSTEM: ubuntu
  EBL_AI_API: http://localhost:8001
  MONGODB_DB: ebltest
  AUTH0_AUDIENCE: test-audience
  AUTH0_ISSUER: https://test.auth0.com/
  AUTH0_PEM: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1UTU4SWg2NDY2anJPcitCTDBiYwpsalBMc1dzZkd0bEFQQ2J5L2NqdS9VS2ZPK2NSc2EyTXpseG9qRGZhWkx1bHJoV25jTlVsTUxuV05uU0ZuV2dqCm5XU1IvT0NrVW0yTUlwY3JkN1k4U21tdUFMNnpLWjZ0QmErK014YWdwNC9FYThHeHR3RmZWMzVFcWJvOEZuOTYKWE5sQmRUNldxdkhZTTZySnhmUVY5MCtudW44NXRqYTQ3RmNQWjZuVHlGdzROdjJKaFZqTjVtdnZ0VXRUMWdCSwpUWHRVUjBjZCtPWFAzNFhDVlhLQ3NuazdPTUhVakZIUnREcXNXSGFaZXN6TlVNYStheGRjdGJWWm9RYUFhUS94CnVlaEVwV2tBenl1ajREbG1FM1h6UWNJdWdDN1k1S2x6OVFxSlZBOTB3c3V4ZUx4bUVPeXhad0dWakZ0U2RFSnEKOXdJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0t
  SENTRY_DSN: https://test@sentry.io/test
  SENTRY_ENVIRONMENT: test

jobs:
  test:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ["3.9", "pypy-3.9"]
    name: Test Python ${{ matrix.python-version }}

    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl libssl-dev

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env

      - name: Install Python Dependencies
        id: install
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install --no-root --with dev

      - name: Lint
        if: success() || steps.install.outcome == 'success'
        run: poetry run ruff check ebl

      - name: Code Style
        if: success() || steps.install.outcome == 'success'
        run: poetry run ruff format --check ebl

      - name: Type Check
        if: success() || steps.install.outcome == 'success'
        run: poetry run pyre check

      - name: Download Test Resources
        run: poetry run python -m ebl.tests.downloader

      - name: Unit Tests
        if: ${{ startsWith(matrix.python-version, 'pypy') }}
        env:
          MONGODB_URI: mongodb://localhost:27017
        run: poetry run pytest -n auto

      - name: Unit Tests with Coverage
        if: ${{ !startsWith(matrix.python-version, 'pypy') }}
        env:
          MONGODB_URI: mongodb://localhost:27017
        run: poetry run pytest --cov=ebl --cov-report term --cov-report xml -x -n auto

      - uses: qltysh/qlty-action/coverage@v1
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: coverage.xml
          add-prefix: ebl/

  docker:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [test]
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ebl.badw.de
          username: ${{ secrets.EBL_REGISTRY_USERNAME }}
          password: ${{ secrets.EBL_REGISTRY_PASSWORD }}

      - id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ebl.badw.de/ebl-api:master
            ${{format('ebl.badw.de/ebl-api:master.{0}', github.run_number)}}