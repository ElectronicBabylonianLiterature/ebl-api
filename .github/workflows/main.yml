name: CI

on:
  push:
  pull_request:
    branches: [master]

  workflow_dispatch:

env:
  PIPENV_VENV_IN_PROJECT: 1
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PYMONGOIM__MONGO_VERSION: 4.4
  PYMONGOIM__OPERATING_SYSTEM: ubuntu

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "pypy-3.9"]
    name: Test Python ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl1.1  # Install OpenSSL 1.1
          sudo apt-get install -y curl

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env

      - name: Install Python Dependencies
        id: install
        run: |
          pip install --upgrade pip
          pip install poetry
          poetry install --no-root

      - name: Lint
        if: success() || steps.install.outcome == 'success'
        run: poetry run ruff check ebl

      - name: Code Style
        if: success() || steps.install.outcome == 'success'
        run: poetry run ruff format --check ebl

      - name: Type Check
        if: success() || steps.install.outcome == 'success'
        run: poetry run pyre check

      - name: Download Test Resources
        run: poetry run python -m ebl.tests.downloader

      - name: Unit Tests
        if: ${{ startsWith(matrix.python-version, 'pypy') }}
        env:
          CI: true
        run: poetry run pytest

      - name: Unit Tests with Coverage
        uses: paambaati/codeclimate-action@v3.0.0
        if: ${{ !startsWith(matrix.python-version, 'pypy') }}
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: poetry run pytest --cov=ebl --cov-report term --cov-report xml
