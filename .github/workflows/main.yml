name: CI

on:
  push:
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PIPENV_VENV_IN_PROJECT: 1
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PYMONGOIM__MONGO_VERSION: 4.4
  PYMONGOIM__OPERATING_SYSTEM: ubuntu

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', 'pypy-3.7']
    name: Test Python ${{ matrix.python-version }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install
        id: install
        run: |
          pip install poetry
          poetry install --no-root

      - name: Lint
        if: success() || steps.install.outcome == 'success'
        run: poetry run flake8 ebl
      
      - name: Code Style
        if: success() || steps.install.outcome == 'success'
        run: poetry run black ebl --check

      - name: Type Check
        if: success() || steps.install.outcome == 'success'
        run: poetry run pyre check

      - name: Download
        run: poetry run python -m ebl.tests.downloader

      - name: Unit Tests
        if: matrix.python-version != '3.7'
        env:
          CI: true
        run: poetry run pytest -n auto

      - name: Unit Tests with Coverage
        id: unit_tests
        if: matrix.python-version == '3.7'
        env:
          CI: true
        run: poetry run pytest --cov=ebl --cov-report term --cov-report xml -n auto
          
      - uses: paambaati/codeclimate-action@v2.7.4
        if: matrix.python-version == '3.7' && (success() || steps.unit_tests.outcome == 'failure')
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      
      - uses: edge/simple-slack-notify@v1.1.1
        if: failure()
        with:
          channel: '#continuous-integration'
          status: ${{ job.status }}
          success_text: 'eBL API  build #${env.GITHUB_RUN_NUMBER} build completed successfully.'
          failure_text: 'eBL API  build #${env.GITHUB_RUN_NUMBER} failed.'
          cancelled_text: 'eBL API  build #${env.GITHUB_RUN_NUMBER} build was cancelled.'
          fields: |
            [{"title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
             {"title": "Ref", "value": "${env.GITHUB_REF}", "short": true },
             {"title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}]

  docker:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1
        
      - uses: docker/login-action@v1 
        with:
          registry: www.ebl.lmu.de
          username: ${{ secrets.EBL_REGISTRY_USERNAME }}
          password: ${{ secrets.EBL_REGISTRY_PASSWORD }}

      - id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            www.ebl.lmu.de/ebl-api:master
            ${{format('www.ebl.lmu.de/ebl-api:master.{0}', github.run_number)}}
      
      - uses: edge/simple-slack-notify@v1.1.1
        if: always()
        with:
          channel: '#continuous-integration'
          status: ${{ job.status }}
          success_text: 'Building eBL API image #${env.GITHUB_RUN_NUMBER} completed successfully.'
          failure_text: 'Building eBL API image #${env.GITHUB_RUN_NUMBER} failed.'
          cancelled_text: 'Building eBL API image #${env.GITHUB_RUN_NUMBER} was cancelled.'
          fields: |
            [{"title": "Repository", "value": "${env.GITHUB_REPOSITORY}", "short": true },
             {"title": "Ref", "value": "${env.GITHUB_REF}", "short": true },
             {"title": "Action URL", "value": "${env.GITHUB_SERVER_URL}/${env.GITHUB_REPOSITORY}/actions/runs/${env.GITHUB_RUN_ID}"}]
